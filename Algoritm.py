import random

table_number = [['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'],
                ['13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24'],
                ['25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36'],
                ['37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48'],
                ['49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60'],
                ['61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72'],
                ['73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84'],
                ['85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96'],
                ['97', '98', '99', '100', '101', '102', '103', '104', '105', '106', '107', '108'],
                ['109', '110', '111', '112', '113', '114', '115', '116', '117', '118', '119', '120'],
                ['121', '122', '123', '124', '125', '126', '127', '128', '129', '130', '131', '132'],
                ['133', '134', '135', '136', '137', '138', '139', '140', '141', '142', '143', '144']]
table_rimnumber = [['I', 'II', 'III', 'IV', 'V', 'VI'],
                   ['VII', 'VIII', 'IX', 'X', 'XI', 'XII'],
                   ['XIII', 'XIV', 'XV', 'XVI', 'XVII', 'XVIII'],
                   ['XIX', 'XX', 'XXI', 'XXII', 'XXIII', 'XXIV'],
                   ['XXV', 'XXVI', 'XXVII', 'XXVIII', 'XXIX', 'XXX'],
                   ['XXXI', 'XXXII', 'XXXIII', 'XXXIV', 'XXXV', 'XXXVI']]
table = [['00', '01', '02'],
         ['10', '11', '12'],
         ['20', '21', '22', '25000']]
English_arr2 = ['Z(ю.п.)', 'V(ю.п.)', 'U(ю.п.)', 'T(ю.п.)', 'S(ю.п.)', 'R(ю.п.)', 'Q(ю.п.)', 'P(ю.п.)', 'O(ю.п.)',
                'N(ю.п.)', 'M(ю.п.)', 'L(ю.п.)', 'K(ю.п.)', 'J(ю.п.)', 'I(ю.п.)', 'H(ю.п.)', 'G(ю.п.)', 'F(ю.п.)',
                'E(ю.п.)', 'D(ю.п.)', 'C(ю.п.)', 'B(ю.п.)', 'A(ю.п.)', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J',
                'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'Z']
English_arr = list(reversed(English_arr2))
protect_sector = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18',
                  '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35',
                  '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52',
                  '53', '54', '55', '56', '57', '58', '59', '60']
add_protect_sector = ['61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76',
                      '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92',
                      '93', '94', '95', '96', '97', '98', '99', '100', '101', '102', '103', '104', '105', '106', '107',
                      '108', '109', '110', '111', '112', '113', '114', '115', '116', '117', '118', '119', '120', '121',
                      '122', '123', '124', '125', '126', '127', '128', '129', '130', '131', '132', '133', '134', '135',
                      '136', '137', '138', '139', '140', '141', '142', '143', '144']
Russian_Arr = ['А', 'Б', 'В', 'Г']
Russian_25k = [
    ['1-А-а', '1-А-б', '1-Б-а', '1-Б-б', '2-А-а', '2-А-б', '2-Б-а', '2-Б-б', '3-А-а', '3-А-б', '3-Б-а', '3-Б-б',
     '4-А-а', '4-А-б', '4-Б-а', '4-Б-б', '5-А-а', '5-А-б', '5-Б-а', '5-Б-б', '6-А-а', '6-А-б', '6-Б-а', '6-Б-б',
     '7-А-а', '7-А-б', '7-Б-а', '7-Б-б', '8-А-а', '8-А-б', '8-Б-а', '8-Б-б', '9-А-а', '9-А-б', '9-Б-а', '9-Б-б',
     '10-А-а', '10-А-б', '10-Б-а', '10-Б-б', '11-А-а', '11-А-б', '11-Б-а', '11-Б-б', '12-А-а', '12-А-б', '12-Б-а',
     '12-Б-б'],
    ['1-А-в', '1-А-г', '1-Б-в', '1-Б-г', '2-А-в', '2-А-г', '2-Б-в', '2-Б-г', '3-А-в', '3-А-г', '3-Б-в', '3-Б-г',
     '4-А-в', '4-А-г', '4-Б-в', '4-Б-г', '5-А-в', '5-А-г', '5-Б-в', '5-Б-г', '6-А-в', '6-А-г', '6-Б-в', '6-Б-г',
     '7-А-в', '7-А-г', '7-Б-в', '7-Б-г', '8-А-в', '8-А-г', '8-Б-в', '8-Б-г', '9-А-в', '9-А-г', '9-Б-в', '9-Б-г',
     '10-А-в', '10-А-г', '10-Б-в', '10-Б-г', '11-А-в', '11-А-г', '11-Б-в', '11-Б-г', '12-А-в', '12-А-г', '12-Б-в',
     '12-Б-г'],
    ['1-В-а', '1-В-б', '1-Г-а', '1-Г-б', '2-В-а', '2-В-б', '2-Г-а', '2-Г-б', '3-В-а', '3-В-б', '3-Г-а', '3-Г-б',
     '4-В-а', '4-В-б', '4-Г-а', '4-Г-б', '5-В-а', '5-В-б', '5-Г-а', '5-Г-б', '6-В-а', '6-В-б', '6-Г-а', '6-Г-б',
     '7-В-а', '7-В-б', '7-Г-а', '7-Г-б', '8-В-а', '8-В-б', '8-Г-а', '8-Г-б', '9-В-а', '9-В-б', '9-Г-а', '9-Г-б',
     '10-В-а', '10-В-б', '10-Г-а', '10-Г-б', '11-В-а', '11-В-б', '11-Г-а', '11-Г-б', '12-В-а', '12-В-б', '12-Г-а',
     '12-Г-б'],
    ['1-В-в', '1-В-г', '1-Г-в', '1-Г-г', '2-В-в', '2-В-г', '2-Г-в', '2-Г-г', '3-В-в', '3-В-г', '3-Г-в', '3-Г-г',
     '4-В-в', '4-В-г', '4-Г-в', '4-Г-г', '5-В-в', '5-В-г', '5-Г-в', '5-Г-г', '6-В-в', '6-В-г', '6-Г-в', '6-Г-г',
     '7-В-в', '7-В-г', '7-Г-в', '7-Г-г', '8-В-в', '8-В-г', '8-Г-в', '8-Г-г', '9-В-в', '9-В-г', '9-Г-в', '9-Г-г',
     '10-В-в', '10-В-г', '10-Г-в', '10-Г-г', '11-В-в', '11-В-г', '11-Г-в', '11-Г-г', '12-В-в', '12-В-г', '12-Г-в',
     '12-Г-г'],
    ['13-А-а', '13-А-б', '13-Б-а', '13-Б-б', '14-А-а', '14-А-б', '14-Б-а', '14-Б-б', '15-А-а', '15-А-б', '15-Б-а',
     '15-Б-б', '16-А-а', '16-А-б', '16-Б-а', '16-Б-б', '17-А-а', '17-А-б', '17-Б-а', '17-Б-б', '18-А-а', '18-А-б',
     '18-Б-а', '18-Б-б', '19-А-а', '19-А-б', '19-Б-а', '19-Б-б', '20-А-а', '20-А-б', '20-Б-а', '20-Б-б', '21-А-а',
     '21-А-б', '21-Б-а', '21-Б-б', '22-А-а', '22-А-б', '22-Б-а', '22-Б-б', '23-А-а', '23-А-б', '23-Б-а', '23-Б-б',
     '24-А-а', '24-А-б', '24-Б-а', '24-Б-б'],
    ['13-А-в', '13-А-г', '13-Б-в', '13-Б-г', '14-А-в', '14-А-г', '14-Б-в', '14-Б-г', '15-А-в', '15-А-г', '15-Б-в',
     '15-Б-г', '16-А-в', '16-А-г', '16-Б-в', '16-Б-г', '17-А-в', '17-А-г', '17-Б-в', '17-Б-г', '18-А-в', '18-А-г',
     '18-Б-в', '18-Б-г', '19-А-в', '19-А-г', '19-Б-в', '19-Б-г', '20-А-в', '20-А-г', '20-Б-в', '20-Б-г', '21-А-в',
     '21-А-г', '21-Б-в', '21-Б-г', '22-А-в', '22-А-г', '22-Б-в', '22-Б-г', '23-А-в', '23-А-г', '23-Б-в', '23-Б-г',
     '24-А-в', '24-А-г', '24-Б-в', '24-Б-г'],
    ['13-В-а', '13-В-б', '13-Г-а', '13-Г-б', '14-В-а', '14-В-б', '14-Г-а', '14-Г-б', '15-В-а', '15-В-б', '15-Г-а',
     '15-Г-б', '16-В-а', '16-В-б', '16-Г-а', '16-Г-б', '17-В-а', '17-В-б', '17-Г-а', '17-Г-б', '18-В-а', '18-В-б',
     '18-Г-а', '18-Г-б', '19-В-а', '19-В-б', '19-Г-а', '19-Г-б', '20-В-а', '20-В-б', '20-Г-а', '20-Г-б', '21-В-а',
     '21-В-б', '21-Г-а', '21-Г-б', '22-В-а', '22-В-б', '22-Г-а', '22-Г-б', '23-В-а', '23-В-б', '23-Г-а', '23-Г-б',
     '24-В-а', '24-В-б', '24-Г-а', '24-Г-б'],
    ['13-В-в', '13-В-г', '13-Г-в', '13-Г-г', '14-В-в', '14-В-г', '14-Г-в', '14-Г-г', '15-В-в', '15-В-г', '15-Г-в',
     '15-Г-г', '16-В-в', '16-В-г', '16-Г-в', '16-Г-г', '17-В-в', '17-В-г', '17-Г-в', '17-Г-г', '18-В-в', '18-В-г',
     '18-Г-в', '18-Г-г', '19-В-в', '19-В-г', '19-Г-в', '19-Г-г', '20-В-в', '20-В-г', '20-Г-в', '20-Г-г', '21-В-в',
     '21-В-г', '21-Г-в', '21-Г-г', '22-В-в', '22-В-г', '22-Г-в', '22-Г-г', '23-В-в', '23-В-г', '23-Г-в', '23-Г-г',
     '24-В-в', '24-В-г', '24-Г-в', '24-Г-г'],
    ['25-А-а', '25-А-б', '25-Б-а', '25-Б-б', '26-А-а', '26-А-б', '26-Б-а', '26-Б-б', '27-А-а', '27-А-б', '27-Б-а',
     '27-Б-б', '28-А-а', '28-А-б', '28-Б-а', '28-Б-б', '29-А-а', '29-А-б', '29-Б-а', '29-Б-б', '30-А-а', '30-А-б',
     '30-Б-а', '30-Б-б', '31-А-а', '31-А-б', '31-Б-а', '31-Б-б', '32-А-а', '32-А-б', '32-Б-а', '32-Б-б', '33-А-а',
     '33-А-б', '33-Б-а', '33-Б-б', '34-А-а', '34-А-б', '34-Б-а', '34-Б-б', '35-А-а', '35-А-б', '35-Б-а', '35-Б-б',
     '36-А-а', '36-А-б', '36-Б-а', '36-Б-б'],
    ['25-А-в', '25-А-г', '25-Б-в', '25-Б-г', '26-А-в', '26-А-г', '26-Б-в', '26-Б-г', '27-А-в', '27-А-г', '27-Б-в',
     '27-Б-г', '28-А-в', '28-А-г', '28-Б-в', '28-Б-г', '29-А-в', '29-А-г', '29-Б-в', '29-Б-г', '30-А-в', '30-А-г',
     '30-Б-в', '30-Б-г', '31-А-в', '31-А-г', '31-Б-в', '31-Б-г', '32-А-в', '32-А-г', '32-Б-в', '32-Б-г', '33-А-в',
     '33-А-г', '33-Б-в', '33-Б-г', '34-А-в', '34-А-г', '34-Б-в', '34-Б-г', '35-А-в', '35-А-г', '35-Б-в', '35-Б-г',
     '36-А-в', '36-А-г', '36-Б-в', '36-Б-г'],
    ['25-В-а', '25-В-б', '25-Г-а', '25-Г-б', '26-В-а', '26-В-б', '26-Г-а', '26-Г-б', '27-В-а', '27-В-б', '27-Г-а',
     '27-Г-б', '28-В-а', '28-В-б', '28-Г-а', '28-Г-б', '29-В-а', '29-В-б', '29-Г-а', '29-Г-б', '30-В-а', '30-В-б',
     '30-Г-а', '30-Г-б', '31-В-а', '31-В-б', '31-Г-а', '31-Г-б', '32-В-а', '32-В-б', '32-Г-а', '32-Г-б', '33-В-а',
     '33-В-б', '33-Г-а', '33-Г-б', '34-В-а', '34-В-б', '34-Г-а', '34-Г-б', '35-В-а', '35-В-б', '35-Г-а', '35-Г-б',
     '36-В-а', '36-В-б', '36-Г-а', '36-Г-б'],
    ['25-В-в', '25-В-г', '25-Г-в', '25-Г-г', '26-В-в', '26-В-г', '26-Г-в', '26-Г-г', '27-В-в', '27-В-г', '27-Г-в',
     '27-Г-г', '28-В-в', '28-В-г', '28-Г-в', '28-Г-г', '29-В-в', '29-В-г', '29-Г-в', '29-Г-г', '30-В-в', '30-В-г',
     '30-Г-в', '30-Г-г', '31-В-в', '31-В-г', '31-Г-в', '31-Г-г', '32-В-в', '32-В-г', '32-Г-в', '32-Г-г', '33-В-в',
     '33-В-г', '33-Г-в', '33-Г-г', '34-В-в', '34-В-г', '34-Г-в', '34-Г-г', '35-В-в', '35-В-г', '35-Г-в', '35-Г-г',
     '36-В-в', '36-В-г', '36-Г-в', '36-Г-г'],
    ['37-А-а', '37-А-б', '37-Б-а', '37-Б-б', '38-А-а', '38-А-б', '38-Б-а', '38-Б-б', '39-А-а', '39-А-б', '39-Б-а',
     '39-Б-б', '40-А-а', '40-А-б', '40-Б-а', '40-Б-б', '41-А-а', '41-А-б', '41-Б-а', '41-Б-б', '42-А-а', '42-А-б',
     '42-Б-а', '42-Б-б', '43-А-а', '43-А-б', '43-Б-а', '43-Б-б', '44-А-а', '44-А-б', '44-Б-а', '44-Б-б', '45-А-а',
     '45-А-б', '45-Б-а', '45-Б-б', '46-А-а', '46-А-б', '46-Б-а', '46-Б-б', '47-А-а', '47-А-б', '47-Б-а', '47-Б-б',
     '48-А-а', '48-А-б', '48-Б-а', '48-Б-б'],
    ['37-А-в', '37-А-г', '37-Б-в', '37-Б-г', '38-А-в', '38-А-г', '38-Б-в', '38-Б-г', '39-А-в', '39-А-г', '39-Б-в',
     '39-Б-г', '40-А-в', '40-А-г', '40-Б-в', '40-Б-г', '41-А-в', '41-А-г', '41-Б-в', '41-Б-г', '42-А-в', '42-А-г',
     '42-Б-в', '42-Б-г', '43-А-в', '43-А-г', '43-Б-в', '43-Б-г', '44-А-в', '44-А-г', '44-Б-в', '44-Б-г', '45-А-в',
     '45-А-г', '45-Б-в', '45-Б-г', '46-А-в', '46-А-г', '46-Б-в', '46-Б-г', '47-А-в', '47-А-г', '47-Б-в', '47-Б-г',
     '48-А-в', '48-А-г', '48-Б-в', '48-Б-г'],
    ['37-В-а', '37-В-б', '37-Г-а', '37-Г-б', '38-В-а', '38-В-б', '38-Г-а', '38-Г-б', '39-В-а', '39-В-б', '39-Г-а',
     '39-Г-б', '40-В-а', '40-В-б', '40-Г-а', '40-Г-б', '41-В-а', '41-В-б', '41-Г-а', '41-Г-б', '42-В-а', '42-В-б',
     '42-Г-а', '42-Г-б', '43-В-а', '43-В-б', '43-Г-а', '43-Г-б', '44-В-а', '44-В-б', '44-Г-а', '44-Г-б', '45-В-а',
     '45-В-б', '45-Г-а', '45-Г-б', '46-В-а', '46-В-б', '46-Г-а', '46-Г-б', '47-В-а', '47-В-б', '47-Г-а', '47-Г-б',
     '48-В-а', '48-В-б', '48-Г-а', '48-Г-б'],
    ['37-В-в', '37-В-г', '37-Г-в', '37-Г-г', '38-В-в', '38-В-г', '38-Г-в', '38-Г-г', '39-В-в', '39-В-г', '39-Г-в',
     '39-Г-г', '40-В-в', '40-В-г', '40-Г-в', '40-Г-г', '41-В-в', '41-В-г', '41-Г-в', '41-Г-г', '42-В-в', '42-В-г',
     '42-Г-в', '42-Г-г', '43-В-в', '43-В-г', '43-Г-в', '43-Г-г', '44-В-в', '44-В-г', '44-Г-в', '44-Г-г', '45-В-в',
     '45-В-г', '45-Г-в', '45-Г-г', '46-В-в', '46-В-г', '46-Г-в', '46-Г-г', '47-В-в', '47-В-г', '47-Г-в', '47-Г-г',
     '48-В-в', '48-В-г', '48-Г-в', '48-Г-г'],
    ['49-А-а', '49-А-б', '49-Б-а', '49-Б-б', '50-А-а', '50-А-б', '50-Б-а', '50-Б-б', '51-А-а', '51-А-б', '51-Б-а',
     '51-Б-б', '52-А-а', '52-А-б', '52-Б-а', '52-Б-б', '53-А-а', '53-А-б', '53-Б-а', '53-Б-б', '54-А-а', '54-А-б',
     '54-Б-а', '54-Б-б', '55-А-а', '55-А-б', '55-Б-а', '55-Б-б', '56-А-а', '56-А-б', '56-Б-а', '56-Б-б', '57-А-а',
     '57-А-б', '57-Б-а', '57-Б-б', '58-А-а', '58-А-б', '58-Б-а', '58-Б-б', '59-А-а', '59-А-б', '59-Б-а', '59-Б-б',
     '60-А-а', '60-А-б', '60-Б-а', '60-Б-б'],
    ['49-А-в', '49-А-г', '49-Б-в', '49-Б-г', '50-А-в', '50-А-г', '50-Б-в', '50-Б-г', '51-А-в', '51-А-г', '51-Б-в',
     '51-Б-г', '52-А-в', '52-А-г', '52-Б-в', '52-Б-г', '53-А-в', '53-А-г', '53-Б-в', '53-Б-г', '54-А-в', '54-А-г',
     '54-Б-в', '54-Б-г', '55-А-в', '55-А-г', '55-Б-в', '55-Б-г', '56-А-в', '56-А-г', '56-Б-в', '56-Б-г', '57-А-в',
     '57-А-г', '57-Б-в', '57-Б-г', '58-А-в', '58-А-г', '58-Б-в', '58-Б-г', '59-А-в', '59-А-г', '59-Б-в', '59-Б-г',
     '60-А-в', '60-А-г', '60-Б-в', '60-Б-г'],
    ['49-В-а', '49-В-б', '49-Г-а', '49-Г-б', '50-В-а', '50-В-б', '50-Г-а', '50-Г-б', '51-В-а', '51-В-б', '51-Г-а',
     '51-Г-б', '52-В-а', '52-В-б', '52-Г-а', '52-Г-б', '53-В-а', '53-В-б', '53-Г-а', '53-Г-б', '54-В-а', '54-В-б',
     '54-Г-а', '54-Г-б', '55-В-а', '55-В-б', '55-Г-а', '55-Г-б', '56-В-а', '56-В-б', '56-Г-а', '56-Г-б', '57-В-а',
     '57-В-б', '57-Г-а', '57-Г-б', '58-В-а', '58-В-б', '58-Г-а', '58-Г-б', '59-В-а', '59-В-б', '59-Г-а', '59-Г-б',
     '60-В-а', '60-В-б', '60-Г-а', '60-Г-б'],
    ['49-В-в', '49-В-г', '49-Г-в', '49-Г-г', '50-В-в', '50-В-г', '50-Г-в', '50-Г-г', '51-В-в', '51-В-г', '51-Г-в',
     '51-Г-г', '52-В-в', '52-В-г', '52-Г-в', '52-Г-г', '53-В-в', '53-В-г', '53-Г-в', '53-Г-г', '54-В-в', '54-В-г',
     '54-Г-в', '54-Г-г', '55-В-в', '55-В-г', '55-Г-в', '55-Г-г', '56-В-в', '56-В-г', '56-Г-в', '56-Г-г', '57-В-в',
     '57-В-г', '57-Г-в', '57-Г-г', '58-В-в', '58-В-г', '58-Г-в', '58-Г-г', '59-В-в', '59-В-г', '59-Г-в', '59-Г-г',
     '60-В-в', '60-В-г', '60-Г-в', '60-Г-г'],
    ['61-А-а', '61-А-б', '61-Б-а', '61-Б-б', '62-А-а', '62-А-б', '62-Б-а', '62-Б-б', '63-А-а', '63-А-б', '63-Б-а',
     '63-Б-б', '64-А-а', '64-А-б', '64-Б-а', '64-Б-б', '65-А-а', '65-А-б', '65-Б-а', '65-Б-б', '66-А-а', '66-А-б',
     '66-Б-а', '66-Б-б', '67-А-а', '67-А-б', '67-Б-а', '67-Б-б', '68-А-а', '68-А-б', '68-Б-а', '68-Б-б', '69-А-а',
     '69-А-б', '69-Б-а', '69-Б-б', '70-А-а', '70-А-б', '70-Б-а', '70-Б-б', '71-А-а', '71-А-б', '71-Б-а', '71-Б-б',
     '72-А-а', '72-А-б', '72-Б-а', '72-Б-б'],
    ['61-А-в', '61-А-г', '61-Б-в', '61-Б-г', '62-А-в', '62-А-г', '62-Б-в', '62-Б-г', '63-А-в', '63-А-г', '63-Б-в',
     '63-Б-г', '64-А-в', '64-А-г', '64-Б-в', '64-Б-г', '65-А-в', '65-А-г', '65-Б-в', '65-Б-г', '66-А-в', '66-А-г',
     '66-Б-в', '66-Б-г', '67-А-в', '67-А-г', '67-Б-в', '67-Б-г', '68-А-в', '68-А-г', '68-Б-в', '68-Б-г', '69-А-в',
     '69-А-г', '69-Б-в', '69-Б-г', '70-А-в', '70-А-г', '70-Б-в', '70-Б-г', '71-А-в', '71-А-г', '71-Б-в', '71-Б-г',
     '72-А-в', '72-А-г', '72-Б-в', '72-Б-г'],
    ['61-В-а', '61-В-б', '61-Г-а', '61-Г-б', '62-В-а', '62-В-б', '62-Г-а', '62-Г-б', '63-В-а', '63-В-б', '63-Г-а',
     '63-Г-б', '64-В-а', '64-В-б', '64-Г-а', '64-Г-б', '65-В-а', '65-В-б', '65-Г-а', '65-Г-б', '66-В-а', '66-В-б',
     '66-Г-а', '66-Г-б', '67-В-а', '67-В-б', '67-Г-а', '67-Г-б', '68-В-а', '68-В-б', '68-Г-а', '68-Г-б', '69-В-а',
     '69-В-б', '69-Г-а', '69-Г-б', '70-В-а', '70-В-б', '70-Г-а', '70-Г-б', '71-В-а', '71-В-б', '71-Г-а', '71-Г-б',
     '72-В-а', '72-В-б', '72-Г-а', '72-Г-б'],
    ['61-В-в', '61-В-г', '61-Г-в', '61-Г-г', '62-В-в', '62-В-г', '62-Г-в', '62-Г-г', '63-В-в', '63-В-г', '63-Г-в',
     '63-Г-г', '64-В-в', '64-В-г', '64-Г-в', '64-Г-г', '65-В-в', '65-В-г', '65-Г-в', '65-Г-г', '66-В-в', '66-В-г',
     '66-Г-в', '66-Г-г', '67-В-в', '67-В-г', '67-Г-в', '67-Г-г', '68-В-в', '68-В-г', '68-Г-в', '68-Г-г', '69-В-в',
     '69-В-г', '69-Г-в', '69-Г-г', '70-В-в', '70-В-г', '70-Г-в', '70-Г-г', '71-В-в', '71-В-г', '71-Г-в', '71-Г-г',
     '72-В-в', '72-В-г', '72-Г-в', '72-Г-г'],
    ['73-А-а', '73-А-б', '73-Б-а', '73-Б-б', '74-А-а', '74-А-б', '74-Б-а', '74-Б-б', '75-А-а', '75-А-б', '75-Б-а',
     '75-Б-б', '76-А-а', '76-А-б', '76-Б-а', '76-Б-б', '77-А-а', '77-А-б', '77-Б-а', '77-Б-б', '78-А-а', '78-А-б',
     '78-Б-а', '78-Б-б', '79-А-а', '79-А-б', '79-Б-а', '79-Б-б', '80-А-а', '80-А-б', '80-Б-а', '80-Б-б', '81-А-а',
     '81-А-б', '81-Б-а', '81-Б-б', '82-А-а', '82-А-б', '82-Б-а', '82-Б-б', '83-А-а', '83-А-б', '83-Б-а', '83-Б-б',
     '84-А-а', '84-А-б', '84-Б-а', '84-Б-б'],
    ['73-А-в', '73-А-г', '73-Б-в', '73-Б-г', '74-А-в', '74-А-г', '74-Б-в', '74-Б-г', '75-А-в', '75-А-г', '75-Б-в',
     '75-Б-г', '76-А-в', '76-А-г', '76-Б-в', '76-Б-г', '77-А-в', '77-А-г', '77-Б-в', '77-Б-г', '78-А-в', '78-А-г',
     '78-Б-в', '78-Б-г', '79-А-в', '79-А-г', '79-Б-в', '79-Б-г', '80-А-в', '80-А-г', '80-Б-в', '80-Б-г', '81-А-в',
     '81-А-г', '81-Б-в', '81-Б-г', '82-А-в', '82-А-г', '82-Б-в', '82-Б-г', '83-А-в', '83-А-г', '83-Б-в', '83-Б-г',
     '84-А-в', '84-А-г', '84-Б-в', '84-Б-г'],
    ['73-В-а', '73-В-б', '73-Г-а', '73-Г-б', '74-В-а', '74-В-б', '74-Г-а', '74-Г-б', '75-В-а', '75-В-б', '75-Г-а',
     '75-Г-б', '76-В-а', '76-В-б', '76-Г-а', '76-Г-б', '77-В-а', '77-В-б', '77-Г-а', '77-Г-б', '78-В-а', '78-В-б',
     '78-Г-а', '78-Г-б', '79-В-а', '79-В-б', '79-Г-а', '79-Г-б', '80-В-а', '80-В-б', '80-Г-а', '80-Г-б', '81-В-а',
     '81-В-б', '81-Г-а', '81-Г-б', '82-В-а', '82-В-б', '82-Г-а', '82-Г-б', '83-В-а', '83-В-б', '83-Г-а', '83-Г-б',
     '84-В-а', '84-В-б', '84-Г-а', '84-Г-б'],
    ['73-В-в', '73-В-г', '73-Г-в', '73-Г-г', '74-В-в', '74-В-г', '74-Г-в', '74-Г-г', '75-В-в', '75-В-г', '75-Г-в',
     '75-Г-г', '76-В-в', '76-В-г', '76-Г-в', '76-Г-г', '77-В-в', '77-В-г', '77-Г-в', '77-Г-г', '78-В-в', '78-В-г',
     '78-Г-в', '78-Г-г', '79-В-в', '79-В-г', '79-Г-в', '79-Г-г', '80-В-в', '80-В-г', '80-Г-в', '80-Г-г', '81-В-в',
     '81-В-г', '81-Г-в', '81-Г-г', '82-В-в', '82-В-г', '82-Г-в', '82-Г-г', '83-В-в', '83-В-г', '83-Г-в', '83-Г-г',
     '84-В-в', '84-В-г', '84-Г-в', '84-Г-г'],
    ['85-А-а', '85-А-б', '85-Б-а', '85-Б-б', '86-А-а', '86-А-б', '86-Б-а', '86-Б-б', '87-А-а', '87-А-б', '87-Б-а',
     '87-Б-б', '88-А-а', '88-А-б', '88-Б-а', '88-Б-б', '89-А-а', '89-А-б', '89-Б-а', '89-Б-б', '90-А-а', '90-А-б',
     '90-Б-а', '90-Б-б', '91-А-а', '91-А-б', '91-Б-а', '91-Б-б', '92-А-а', '92-А-б', '92-Б-а', '92-Б-б', '93-А-а',
     '93-А-б', '93-Б-а', '93-Б-б', '94-А-а', '94-А-б', '94-Б-а', '94-Б-б', '95-А-а', '95-А-б', '95-Б-а', '95-Б-б',
     '96-А-а', '96-А-б', '96-Б-а', '96-Б-б'],
    ['85-А-в', '85-А-г', '85-Б-в', '85-Б-г', '86-А-в', '86-А-г', '86-Б-в', '86-Б-г', '87-А-в', '87-А-г', '87-Б-в',
     '87-Б-г', '88-А-в', '88-А-г', '88-Б-в', '88-Б-г', '89-А-в', '89-А-г', '89-Б-в', '89-Б-г', '90-А-в', '90-А-г',
     '90-Б-в', '90-Б-г', '91-А-в', '91-А-г', '91-Б-в', '91-Б-г', '92-А-в', '92-А-г', '92-Б-в', '92-Б-г', '93-А-в',
     '93-А-г', '93-Б-в', '93-Б-г', '94-А-в', '94-А-г', '94-Б-в', '94-Б-г', '95-А-в', '95-А-г', '95-Б-в', '95-Б-г',
     '96-А-в', '96-А-г', '96-Б-в', '96-Б-г'],
    ['85-В-а', '85-В-б', '85-Г-а', '85-Г-б', '86-В-а', '86-В-б', '86-Г-а', '86-Г-б', '87-В-а', '87-В-б', '87-Г-а',
     '87-Г-б', '88-В-а', '88-В-б', '88-Г-а', '88-Г-б', '89-В-а', '89-В-б', '89-Г-а', '89-Г-б', '90-В-а', '90-В-б',
     '90-Г-а', '90-Г-б', '91-В-а', '91-В-б', '91-Г-а', '91-Г-б', '92-В-а', '92-В-б', '92-Г-а', '92-Г-б', '93-В-а',
     '93-В-б', '93-Г-а', '93-Г-б', '94-В-а', '94-В-б', '94-Г-а', '94-Г-б', '95-В-а', '95-В-б', '95-Г-а', '95-Г-б',
     '96-В-а', '96-В-б', '96-Г-а', '96-Г-б'],
    ['85-В-в', '85-В-г', '85-Г-в', '85-Г-г', '86-В-в', '86-В-г', '86-Г-в', '86-Г-г', '87-В-в', '87-В-г', '87-Г-в',
     '87-Г-г', '88-В-в', '88-В-г', '88-Г-в', '88-Г-г', '89-В-в', '89-В-г', '89-Г-в', '89-Г-г', '90-В-в', '90-В-г',
     '90-Г-в', '90-Г-г', '91-В-в', '91-В-г', '91-Г-в', '91-Г-г', '92-В-в', '92-В-г', '92-Г-в', '92-Г-г', '93-В-в',
     '93-В-г', '93-Г-в', '93-Г-г', '94-В-в', '94-В-г', '94-Г-в', '94-Г-г', '95-В-в', '95-В-г', '95-Г-в', '95-Г-г',
     '96-В-в', '96-В-г', '96-Г-в', '96-Г-г'],
    ['97-А-а', '97-А-б', '97-Б-а', '97-Б-б', '98-А-а', '98-А-б', '98-Б-а', '98-Б-б', '99-А-а', '99-А-б', '99-Б-а',
     '99-Б-б', '100-А-а', '100-А-б', '100-Б-а', '100-Б-б', '101-А-а', '101-А-б', '101-Б-а', '101-Б-б', '102-А-а',
     '102-А-б', '102-Б-а', '102-Б-б', '103-А-а', '103-А-б', '103-Б-а', '103-Б-б', '104-А-а', '104-А-б', '104-Б-а',
     '104-Б-б', '105-А-а', '105-А-б', '105-Б-а', '105-Б-б', '106-А-а', '106-А-б', '106-Б-а', '106-Б-б', '107-А-а',
     '107-А-б', '107-Б-а', '107-Б-б', '108-А-а', '108-А-б', '108-Б-а', '108-Б-б'],
    ['97-А-в', '97-А-г', '97-Б-в', '97-Б-г', '98-А-в', '98-А-г', '98-Б-в', '98-Б-г', '99-А-в', '99-А-г', '99-Б-в',
     '99-Б-г', '100-А-в', '100-А-г', '100-Б-в', '100-Б-г', '101-А-в', '101-А-г', '101-Б-в', '101-Б-г', '102-А-в',
     '102-А-г', '102-Б-в', '102-Б-г', '103-А-в', '103-А-г', '103-Б-в', '103-Б-г', '104-А-в', '104-А-г', '104-Б-в',
     '104-Б-г', '105-А-в', '105-А-г', '105-Б-в', '105-Б-г', '106-А-в', '106-А-г', '106-Б-в', '106-Б-г', '107-А-в',
     '107-А-г', '107-Б-в', '107-Б-г', '108-А-в', '108-А-г', '108-Б-в', '108-Б-г'],
    ['97-В-а', '97-В-б', '97-Г-а', '97-Г-б', '98-В-а', '98-В-б', '98-Г-а', '98-Г-б', '99-В-а', '99-В-б', '99-Г-а',
     '99-Г-б', '100-В-а', '100-В-б', '100-Г-а', '100-Г-б', '101-В-а', '101-В-б', '101-Г-а', '101-Г-б', '102-В-а',
     '102-В-б', '102-Г-а', '102-Г-б', '103-В-а', '103-В-б', '103-Г-а', '103-Г-б', '104-В-а', '104-В-б', '104-Г-а',
     '104-Г-б', '105-В-а', '105-В-б', '105-Г-а', '105-Г-б', '106-В-а', '106-В-б', '106-Г-а', '106-Г-б', '107-В-а',
     '107-В-б', '107-Г-а', '107-Г-б', '108-В-а', '108-В-б', '108-Г-а', '108-Г-б'],
    ['97-В-в', '97-В-г', '97-Г-в', '97-Г-г', '98-В-в', '98-В-г', '98-Г-в', '98-Г-г', '99-В-в', '99-В-г', '99-Г-в',
     '99-Г-г', '100-В-в', '100-В-г', '100-Г-в', '100-Г-г', '101-В-в', '101-В-г', '101-Г-в', '101-Г-г', '102-В-в',
     '102-В-г', '102-Г-в', '102-Г-г', '103-В-в', '103-В-г', '103-Г-в', '103-Г-г', '104-В-в', '104-В-г', '104-Г-в',
     '104-Г-г', '105-В-в', '105-В-г', '105-Г-в', '105-Г-г', '106-В-в', '106-В-г', '106-Г-в', '106-Г-г', '107-В-в',
     '107-В-г', '107-Г-в', '107-Г-г', '108-В-в', '108-В-г', '108-Г-в', '108-Г-г'],
    ['109-А-а', '109-А-б', '109-Б-а', '109-Б-б', '110-А-а', '110-А-б', '110-Б-а', '110-Б-б', '111-А-а', '111-А-б',
     '111-Б-а', '111-Б-б', '112-А-а', '112-А-б', '112-Б-а', '112-Б-б', '113-А-а', '113-А-б', '113-Б-а', '113-Б-б',
     '114-А-а', '114-А-б', '114-Б-а', '114-Б-б', '115-А-а', '115-А-б', '115-Б-а', '115-Б-б', '116-А-а', '116-А-б',
     '116-Б-а', '116-Б-б', '117-А-а', '117-А-б', '117-Б-а', '117-Б-б', '118-А-а', '118-А-б', '118-Б-а', '118-Б-б',
     '119-А-а', '119-А-б', '119-Б-а', '119-Б-б', '120-А-а', '120-А-б', '120-Б-а', '120-Б-б'],
    ['109-А-в', '109-А-г', '109-Б-в', '109-Б-г', '110-А-в', '110-А-г', '110-Б-в', '110-Б-г', '111-А-в', '111-А-г',
     '111-Б-в', '111-Б-г', '112-А-в', '112-А-г', '112-Б-в', '112-Б-г', '113-А-в', '113-А-г', '113-Б-в', '113-Б-г',
     '114-А-в', '114-А-г', '114-Б-в', '114-Б-г', '115-А-в', '115-А-г', '115-Б-в', '115-Б-г', '116-А-в', '116-А-г',
     '116-Б-в', '116-Б-г', '117-А-в', '117-А-г', '117-Б-в', '117-Б-г', '118-А-в', '118-А-г', '118-Б-в', '118-Б-г',
     '119-А-в', '119-А-г', '119-Б-в', '119-Б-г', '120-А-в', '120-А-г', '120-Б-в', '120-Б-г'],
    ['109-В-а', '109-В-б', '109-Г-а', '109-Г-б', '110-В-а', '110-В-б', '110-Г-а', '110-Г-б', '111-В-а', '111-В-б',
     '111-Г-а', '111-Г-б', '112-В-а', '112-В-б', '112-Г-а', '112-Г-б', '113-В-а', '113-В-б', '113-Г-а', '113-Г-б',
     '114-В-а', '114-В-б', '114-Г-а', '114-Г-б', '115-В-а', '115-В-б', '115-Г-а', '115-Г-б', '116-В-а', '116-В-б',
     '116-Г-а', '116-Г-б', '117-В-а', '117-В-б', '117-Г-а', '117-Г-б', '118-В-а', '118-В-б', '118-Г-а', '118-Г-б',
     '119-В-а', '119-В-б', '119-Г-а', '119-Г-б', '120-В-а', '120-В-б', '120-Г-а', '120-Г-б'],
    ['109-В-в', '109-В-г', '109-Г-в', '109-Г-г', '110-В-в', '110-В-г', '110-Г-в', '110-Г-г', '111-В-в', '111-В-г',
     '111-Г-в', '111-Г-г', '112-В-в', '112-В-г', '112-Г-в', '112-Г-г', '113-В-в', '113-В-г', '113-Г-в', '113-Г-г',
     '114-В-в', '114-В-г', '114-Г-в', '114-Г-г', '115-В-в', '115-В-г', '115-Г-в', '115-Г-г', '116-В-в', '116-В-г',
     '116-Г-в', '116-Г-г', '117-В-в', '117-В-г', '117-Г-в', '117-Г-г', '118-В-в', '118-В-г', '118-Г-в', '118-Г-г',
     '119-В-в', '119-В-г', '119-Г-в', '119-Г-г', '120-В-в', '120-В-г', '120-Г-в', '120-Г-г'],
    ['121-А-а', '121-А-б', '121-Б-а', '121-Б-б', '122-А-а', '122-А-б', '122-Б-а', '122-Б-б', '123-А-а', '123-А-б',
     '123-Б-а', '123-Б-б', '124-А-а', '124-А-б', '124-Б-а', '124-Б-б', '125-А-а', '125-А-б', '125-Б-а', '125-Б-б',
     '126-А-а', '126-А-б', '126-Б-а', '126-Б-б', '127-А-а', '127-А-б', '127-Б-а', '127-Б-б', '128-А-а', '128-А-б',
     '128-Б-а', '128-Б-б', '129-А-а', '129-А-б', '129-Б-а', '129-Б-б', '130-А-а', '130-А-б', '130-Б-а', '130-Б-б',
     '131-А-а', '131-А-б', '131-Б-а', '131-Б-б', '132-А-а', '132-А-б', '132-Б-а', '132-Б-б'],
    ['121-А-в', '121-А-г', '121-Б-в', '121-Б-г', '122-А-в', '122-А-г', '122-Б-в', '122-Б-г', '123-А-в', '123-А-г',
     '123-Б-в', '123-Б-г', '124-А-в', '124-А-г', '124-Б-в', '124-Б-г', '125-А-в', '125-А-г', '125-Б-в', '125-Б-г',
     '126-А-в', '126-А-г', '126-Б-в', '126-Б-г', '127-А-в', '127-А-г', '127-Б-в', '127-Б-г', '128-А-в', '128-А-г',
     '128-Б-в', '128-Б-г', '129-А-в', '129-А-г', '129-Б-в', '129-Б-г', '130-А-в', '130-А-г', '130-Б-в', '130-Б-г',
     '131-А-в', '131-А-г', '131-Б-в', '131-Б-г', '132-А-в', '132-А-г', '132-Б-в', '132-Б-г'],
    ['121-В-а', '121-В-б', '121-Г-а', '121-Г-б', '122-В-а', '122-В-б', '122-Г-а', '122-Г-б', '123-В-а', '123-В-б',
     '123-Г-а', '123-Г-б', '124-В-а', '124-В-б', '124-Г-а', '124-Г-б', '125-В-а', '125-В-б', '125-Г-а', '125-Г-б',
     '126-В-а', '126-В-б', '126-Г-а', '126-Г-б', '127-В-а', '127-В-б', '127-Г-а', '127-Г-б', '128-В-а', '128-В-б',
     '128-Г-а', '128-Г-б', '129-В-а', '129-В-б', '129-Г-а', '129-Г-б', '130-В-а', '130-В-б', '130-Г-а', '130-Г-б',
     '131-В-а', '131-В-б', '131-Г-а', '131-Г-б', '132-В-а', '132-В-б', '132-Г-а', '132-Г-б'],
    ['121-В-в', '121-В-г', '121-Г-в', '121-Г-г', '122-В-в', '122-В-г', '122-Г-в', '122-Г-г', '123-В-в', '123-В-г',
     '123-Г-в', '123-Г-г', '124-В-в', '124-В-г', '124-Г-в', '124-Г-г', '125-В-в', '125-В-г', '125-Г-в', '125-Г-г',
     '126-В-в', '126-В-г', '126-Г-в', '126-Г-г', '127-В-в', '127-В-г', '127-Г-в', '127-Г-г', '128-В-в', '128-В-г',
     '128-Г-в', '128-Г-г', '129-В-в', '129-В-г', '129-Г-в', '129-Г-г', '130-В-в', '130-В-г', '130-Г-в', '130-Г-г',
     '131-В-в', '131-В-г', '131-Г-в', '131-Г-г', '132-В-в', '132-В-г', '132-Г-в', '132-Г-г'],
    ['133-А-а', '133-А-б', '133-Б-а', '133-Б-б', '134-А-а', '134-А-б', '134-Б-а', '134-Б-б', '135-А-а', '135-А-б',
     '135-Б-а', '135-Б-б', '136-А-а', '136-А-б', '136-Б-а', '136-Б-б', '137-А-а', '137-А-б', '137-Б-а', '137-Б-б',
     '138-А-а', '138-А-б', '138-Б-а', '138-Б-б', '139-А-а', '139-А-б', '139-Б-а', '139-Б-б', '140-А-а', '140-А-б',
     '140-Б-а', '140-Б-б', '141-А-а', '141-А-б', '141-Б-а', '141-Б-б', '142-А-а', '142-А-б', '142-Б-а', '142-Б-б',
     '143-А-а', '143-А-б', '143-Б-а', '143-Б-б', '144-А-а', '144-А-б', '144-Б-а', '144-Б-б'],
    ['133-А-в', '133-А-г', '133-Б-в', '133-Б-г', '134-А-в', '134-А-г', '134-Б-в', '134-Б-г', '135-А-в', '135-А-г',
     '135-Б-в', '135-Б-г', '136-А-в', '136-А-г', '136-Б-в', '136-Б-г', '137-А-в', '137-А-г', '137-Б-в', '137-Б-г',
     '138-А-в', '138-А-г', '138-Б-в', '138-Б-г', '139-А-в', '139-А-г', '139-Б-в', '139-Б-г', '140-А-в', '140-А-г',
     '140-Б-в', '140-Б-г', '141-А-в', '141-А-г', '141-Б-в', '141-Б-г', '142-А-в', '142-А-г', '142-Б-в', '142-Б-г',
     '143-А-в', '143-А-г', '143-Б-в', '143-Б-г', '144-А-в', '144-А-г', '144-Б-в', '144-Б-г'],
    ['133-В-а', '133-В-б', '133-Г-а', '133-Г-б', '134-В-а', '134-В-б', '134-Г-а', '134-Г-б', '135-В-а', '135-В-б',
     '135-Г-а', '135-Г-б', '136-В-а', '136-В-б', '136-Г-а', '136-Г-б', '137-В-а', '137-В-б', '137-Г-а', '137-Г-б',
     '138-В-а', '138-В-б', '138-Г-а', '138-Г-б', '139-В-а', '139-В-б', '139-Г-а', '139-Г-б', '140-В-а', '140-В-б',
     '140-Г-а', '140-Г-б', '141-В-а', '141-В-б', '141-Г-а', '141-Г-б', '142-В-а', '142-В-б', '142-Г-а', '142-Г-б',
     '143-В-а', '143-В-б', '143-Г-а', '143-Г-б', '144-В-а', '144-В-б', '144-Г-а', '144-Г-б'],
    ['133-В-в', '133-В-г', '133-Г-в', '133-Г-г', '134-В-в', '134-В-г', '134-Г-в', '134-Г-г', '135-В-в', '135-В-г',
     '135-Г-в', '135-Г-г', '136-В-в', '136-В-г', '136-Г-в', '136-Г-г', '137-В-в', '137-В-г', '137-Г-в', '137-Г-г',
     '138-В-в', '138-В-г', '138-Г-в', '138-Г-г', '139-В-в', '139-В-г', '139-Г-в', '139-Г-г', '140-В-в', '140-В-г',
     '140-Г-в', '140-Г-г', '141-В-в', '141-В-г', '141-Г-в', '141-Г-г', '142-В-в', '142-В-г', '142-Г-в', '142-Г-г',
     '143-В-в', '143-В-г', '143-Г-в', '143-Г-г', '144-В-в', '144-В-г', '144-Г-в', '144-Г-г']]


def index_table_number(var):
    i = 0
    for elem in table_number:
        if var in elem:
            return i, elem.index(var)
        i += 1


def index_russian_25k(var):
    i = 0
    for elem in Russian_25k:
        if var in elem:
            return i, elem.index(var)
        i += 1


def cymbol_number(value_user, elems):
    """1:1 000 000"""
    English_arr_minus = English_arr.index(elems[0]) - 1
    English_arr_up = English_arr.index(elems[0]) + 1

    if English_arr.index(elems[0]) == 0:
        English_arr_minus = 1
    if English_arr.index(elems[0]) == len(English_arr) - 1:
        English_arr_up = -2  # English_arr.index(elems[0])-1

    Sector_next = int(elems[1]) + 1
    if int(elems[1]) == 60:
        Sector_next = 1

    Sector_last = int(elems[1]) - 1
    if int(elems[1]) == 1:
        Sector_last = 60
    # общие случаи
    table[1][1] = value_user
    table[0][0] = English_arr[English_arr_minus] + "-" + str(Sector_last)
    table[0][1] = English_arr[English_arr_minus] + "-" + elems[1]
    table[0][2] = English_arr[English_arr_minus] + "-" + str(Sector_next)
    table[1][0] = elems[0] + "-" + str(Sector_last)
    table[1][2] = elems[0] + "-" + str(Sector_next)
    table[2][0] = English_arr[English_arr_up] + "-" + str(Sector_last)
    table[2][1] = English_arr[English_arr_up] + "-" + elems[1]
    table[2][2] = English_arr[English_arr_up] + "-" + str(Sector_next)

    # переходные случаи
    if elems[0] == English_arr[-1]:
        table[2][0] = elems[0] + "-" + str(int(elems[1]) - 1)
        table[2][1] = elems[0] + "-" + elems[1]
        table[2][2] = elems[0] + "-" + str(Sector_next)
    if elems[1] == table_number[0][0]:
        table[0][0] = English_arr[English_arr_minus] + "-" + table_number[4][-1]
        table[1][0] = elems[0] + "-" + table_number[4][-1]
        table[2][0] = English_arr[English_arr_up] + "-" + table_number[4][-1]
    if elems[1] == table_number[4][-1]:
        table[0][2] = English_arr[English_arr_minus] + "-" + table_number[0][0]
        table[1][2] = elems[0] + "-" + table_number[0][0]
        table[2][2] = elems[0] + "-" + table_number[0][0]


def cymbol_number_cymbol(value_user, elems):
    """1:500 000"""
    English_arr_minus = English_arr.index(elems[0]) - 1
    English_arr_up = English_arr.index(elems[0]) + 1
    if English_arr.index(elems[0]) == 0:
        English_arr_minus = 1
    if English_arr.index(elems[0]) == len(English_arr) - 1:
        English_arr_up = -2  # English_arr.index(elems[0])-1

    Sector_next = int(elems[1]) + 1
    if int(elems[1]) == 60:
        Sector_next = 1

    Sector_last = int(elems[1]) - 1
    if int(elems[1]) == 1:
        Sector_last = 60
    table[1][1] = value_user
    if elems[2] == Russian_Arr[0]:  # если А
        table[0][0] = English_arr[English_arr_minus] + "-" + str(Sector_last) + "-Г"
        table[0][1] = English_arr[English_arr_minus] + "-" + str(elems[1]) + "-В"
        table[0][2] = English_arr[English_arr_minus] + "-" + str(elems[1]) + "-Г"
        table[1][0] = elems[0] + "-" + str(Sector_last) + "-Б"
        table[1][2] = elems[0] + "-" + str(elems[1]) + "-Б"
        table[2][0] = elems[0] + "-" + str(Sector_last) + "-Г"
        table[2][1] = elems[0] + "-" + str(elems[1]) + "-В"
        table[2][2] = elems[0] + "-" + str(int(elems[1])) + "-Г"
    elif elems[2] == Russian_Arr[1]:  # Б
        table[0][0] = English_arr[English_arr_minus] + "-" + str(int(elems[1])) + "-В"
        table[0][1] = English_arr[English_arr_minus] + "-" + str(int(elems[1])) + "-Г"
        table[0][2] = English_arr[English_arr_minus] + "-" + str(Sector_next) + "-В"
        table[1][0] = elems[0] + "-" + str(elems[1]) + "-А"
        table[1][2] = elems[0] + "-" + str(Sector_next) + "-А"
        table[2][0] = elems[0] + "-" + str(elems[1]) + "-В"
        table[2][1] = elems[0] + "-" + str(elems[1]) + "-Г"
        table[2][2] = elems[0] + "-" + str(Sector_next) + "-В"
    elif elems[2] == Russian_Arr[2]:  # В
        table[0][0] = elems[0] + "-" + str(Sector_last) + "-Б"
        table[0][1] = elems[0] + "-" + str(int(elems[1])) + "-А"
        table[0][2] = elems[0] + "-" + str(int(elems[1])) + "-Б"
        table[1][0] = elems[0] + "-" + str(Sector_last) + "-Г"
        table[1][2] = elems[0] + "-" + str(int(elems[1])) + "-Г"
        table[2][0] = English_arr[English_arr_up] + "-" + str(Sector_last) + "-Б"
        table[2][1] = English_arr[English_arr_up] + "-" + str(int(elems[1])) + "-А"
        table[2][2] = English_arr[English_arr_up] + "-" + str(int(elems[1])) + "-Б"
    elif elems[2] == Russian_Arr[3]:  # Г
        table[0][0] = elems[0] + "-" + str(int(elems[1])) + "-А"
        table[0][1] = elems[0] + "-" + str(int(elems[1])) + "-Б"
        table[0][2] = elems[0] + "-" + str(Sector_next) + "-А"
        table[1][0] = elems[0] + "-" + str(int(elems[1])) + "-В"
        table[1][2] = elems[0] + "-" + str(Sector_next) + "-В"

        table[2][0] = English_arr[English_arr_up] + "-" + str(int(elems[1])) + "-А"
        table[2][1] = English_arr[English_arr_up] + "-" + str(int(elems[1])) + "-Б"
        table[2][2] = English_arr[English_arr_up] + "-" + str(Sector_next) + "-А"


def cymbol_number_number(value_user, elems):
    """1:100 000"""
    vert, horiz = index_table_number(elems[2])
    vert_plus = vert + 1
    horiz_plus = horiz + 1
    vert_minus = vert - 1
    horiz_minus = horiz - 1
    Cymbol_English_up = Cymbol_English_midle = Cymbol_English_down = elems[0]
    Sector_first = Sector_midle = Sector_last = elems[1]

    English_arr_minus = English_arr.index(elems[0]) - 1
    English_arr_up = English_arr.index(elems[0]) + 1
    if English_arr.index(elems[0]) == 0:
        English_arr_minus = 0
    if English_arr.index(elems[0]) == len(English_arr) - 1:
        English_arr_up = English_arr.index(elems[0])
    print(vert)
    print(horiz)
    if vert == 11:
        vert_plus = 0
        Cymbol_English_down = English_arr[English_arr_up]
    elif vert == 0:
        vert_minus = 11
        Cymbol_English_up = English_arr[English_arr_minus]
    if horiz == 11:
        horiz_plus = 0
        if int(elems[1]) == 60:
            Sector_last = str(1)
        else:
            Sector_last = str(int(elems[1]) + 1)
    elif horiz == 0:

        if int(elems[1]) == 1:
            Sector_first = str(60)

        else:
            Sector_first = str(int(elems[1]) - 1)
        horiz_minus = 11

    table[0][0] = Cymbol_English_up + "-" + Sector_first + '-' + table_number[vert_minus][horiz_minus]
    table[0][1] = Cymbol_English_up + "-" + Sector_midle + '-' + table_number[vert_minus][horiz]
    table[0][2] = Cymbol_English_up + "-" + Sector_last + '-' + table_number[vert_minus][horiz_plus]

    table[1][0] = Cymbol_English_midle + "-" + Sector_first + '-' + table_number[vert][horiz_minus]
    table[1][1] = value_user
    table[1][2] = Cymbol_English_midle + "-" + Sector_last + '-' + table_number[vert][horiz_plus]

    table[2][0] = Cymbol_English_down + "-" + Sector_first + '-' + table_number[vert_plus][horiz_minus]
    table[2][1] = Cymbol_English_down + "-" + Sector_midle + '-' + table_number[vert_plus][horiz]
    table[2][2] = Cymbol_English_down + "-" + Sector_last + '-' + table_number[vert_plus][horiz_plus]


def cymbol_number_number_cymbol(value_user, elems):
    """1:50 000"""
    vert, horiz = index_table_number(elems[2])  # узнает позиции сектора цифры

    English_arr_up = English_arr.index(elems[0]) - 1  # ИНВЕРТИРОВАНО!!!!!!
    English_arr_minus = English_arr.index(elems[0]) + 1

    if English_arr.index(elems[0]) == 0:
        English_arr_up = 0
    if English_arr.index(elems[0]) == len(English_arr) - 1:
        English_arr_minus = English_arr.index(elems[0])

    Sector_next = int(elems[1]) + 1
    if int(elems[1]) == 60:
        Sector_next = 1

    Sector_last = int(elems[1]) - 1
    if int(elems[1]) == 1:
        Sector_last = 60

    if elems[3] == 'А':
        table[1][2] = elems[0] + "-" + elems[1] + "-" + elems[2] + '-Б'
        table[2][1] = elems[0] + "-" + elems[1] + "-" + elems[2] + '-В'
        table[2][2] = elems[0] + "-" + elems[1] + "-" + elems[2] + '-Г'
        table[1][1] = value_user

        if vert == 0:
            table[0][1] = English_arr[English_arr_up] + '-' + elems[1] + '-' + table_number[11][horiz] + "-В"
            table[0][2] = English_arr[English_arr_up] + '-' + elems[1] + '-' + table_number[11][horiz] + "-Г"
        else:
            table[0][1] = elems[0] + '-' + elems[1] + '-' + table_number[vert - 1][horiz] + "-В"
            table[0][2] = elems[0] + '-' + elems[1] + '-' + table_number[vert - 1][horiz] + "-Г"

        if horiz == 0:
            table[1][0] = elems[0] + '-' + str(Sector_last) + '-' + table_number[vert][11] + '-Б'
            table[2][0] = elems[0] + '-' + str(Sector_last) + '-' + table_number[vert][11] + '-Г'
        else:
            table[1][0] = elems[0] + '-' + elems[1] + '-' + table_number[vert][horiz - 1] + '-Б'
            table[2][0] = elems[0] + '-' + elems[1] + '-' + table_number[vert][horiz - 1] + '-Г'

        if vert == 0 and horiz == 0:
            table[0][0] = English_arr[English_arr_up] + '-' + str(Sector_last) + '-' + table_number[11][11] + '-Г'
        elif vert == 0 and horiz != 0:
            table[0][0] = English_arr[English_arr_up] + '-' + elems[1] + '-' + table_number[11][horiz - 1] + '-Г'
        elif vert != 0 and horiz == 0:
            table[0][0] = elems[0] + '-' + str(Sector_last) + '-' + table_number[vert - 1][11] + '-Г'
        else:
            table[0][0] = elems[0] + '-' + elems[1] + '-' + table_number[vert - 1][horiz - 1] + '-Г'
    if elems[3] == 'Б':
        table[1][0] = elems[0] + '-' + elems[1] + '-' + elems[2] + '-А'
        table[1][1] = value_user
        table[2][0] = elems[0] + '-' + elems[1] + '-' + elems[2] + '-В'
        table[2][1] = elems[0] + '-' + elems[1] + '-' + elems[2] + '-Г'
        if horiz == 11:
            table[2][2] = elems[0] + '-' + str(Sector_next) + '-' + table_number[vert][0] + '-В'
            table[1][2] = elems[0] + '-' + str(Sector_next) + '-' + table_number[vert][0] + '-А'
        else:
            table[2][2] = elems[0] + '-' + elems[1] + '-' + table_number[vert][horiz + 1] + '-В'
            table[1][2] = elems[0] + '-' + elems[1] + '-' + table_number[vert][horiz + 1] + '-А'

        if vert == 0:
            # table[0][2]=elems[0]+'-'+Sector_next+'-'+table_number[vert-1][0]+'-В'
            table[0][0] = English_arr[English_arr_up] + '-' + elems[1] + '-' + table_number[11][horiz] + "-В"
            table[0][1] = English_arr[English_arr_up] + '-' + elems[1] + '-' + table_number[11][horiz] + '-Г'
        else:
            table[0][0] = elems[0] + '-' + elems[1] + '-' + table_number[vert - 1][horiz] + "-В"
            table[0][1] = elems[0] + '-' + elems[1] + '-' + table_number[vert - 1][horiz] + '-Г'
        if vert == 0 and horiz == 11:
            table[0][2] = English_arr[English_arr_up] + '-' + str(Sector_next) + '-' + table_number[11][0] + '-В'
        elif vert == 0 and horiz != 11:
            table[0][2] = English_arr[English_arr_up] + '-' + str(Sector_last) + '-' + table_number[11][
                horiz + 1] + '-В'
        elif horiz == 11 and vert != 0:
            table[0][2] = elems[0] + '-' + str(Sector_next) + '-' + table_number[vert - 1][0] + '-В'
        else:
            table[0][2] = elems[0] + '-' + elems[1] + '-' + table_number[vert][horiz + 1] + '-В'
    if elems[3] == 'В':
        table[1][1] = value_user
        table[0][1] = elems[0] + '-' + elems[1] + '-' + elems[2] + '-А'
        table[0][2] = elems[0] + '-' + elems[1] + '-' + elems[2] + '-Б'
        table[1][2] = elems[0] + '-' + elems[1] + '-' + elems[2] + '-Г'
        if vert == 11:
            table[2][1] = English_arr[English_arr_minus] + '-' + elems[1] + '-' + table_number[0][horiz] + '-А'
            table[2][2] = English_arr[English_arr_minus] + '-' + elems[1] + '-' + table_number[0][horiz] + '-Б'
        else:
            table[2][1] = elems[0] + '-' + elems[1] + '-' + table_number[vert + 1][horiz] + '-А'
            table[2][2] = elems[0] + '-' + elems[1] + '-' + table_number[vert + 1][horiz] + '-Б'

        if horiz == 0:
            table[0][0] = elems[0] + '-' + str(Sector_last) + '-' + table_number[vert][11] + '-Б'
            table[1][0] = elems[0] + '-' + str(Sector_last) + '-' + table_number[vert][11] + '-Г'
        else:
            table[0][0] = elems[0] + '-' + elems[1] + '-' + table_number[vert][horiz - 1] + '-Б'
            table[1][0] = elems[0] + '-' + elems[1] + '-' + table_number[vert][horiz - 1] + '-Г'
        if vert == 11 and horiz == 0:
            table[2][0] = English_arr[English_arr_minus] + '-' + str(Sector_last) + '-' + table_number[0][11] + '-Б'
        elif vert == 11 and horiz != 0:
            table[2][0] = English_arr[English_arr_minus] + '-' + elems[1] + '-' + table_number[0][horiz - 1] + '-Б'
        elif horiz == 0 and vert != 11:
            table[2][0] = elems[0] + '-' + str(Sector_last) + '-' + table_number[vert + 1][11] + '-Б'
        else:
            table[2][0] = elems[0] + '-' + elems[1] + '-' + table_number[vert + 1][horiz - 1] + '-Б'
    if elems[3] == 'Г':
        table[0][0] = elems[0] + "-" + elems[1] + "-" + elems[2] + '-А'
        table[0][1] = elems[0] + "-" + elems[1] + "-" + elems[2] + '-Б'
        table[1][0] = elems[0] + "-" + elems[1] + "-" + elems[2] + '-В'
        table[1][1] = value_user
        if vert == 11:
            table[2][0] = English_arr[English_arr_minus] + '-' + elems[1] + '-' + table_number[0][horiz] + '-А'
            table[2][1] = English_arr[English_arr_minus] + '-' + elems[1] + '-' + table_number[0][horiz] + '-Б'
        else:
            table[2][0] = elems[0] + '-' + elems[1] + '-' + table_number[vert + 1][horiz] + '-А'
            table[2][1] = elems[0] + '-' + elems[1] + '-' + table_number[vert + 1][horiz] + '-Б'
        if horiz == 11:
            table[0][2] = elems[0] + '-' + str(Sector_next) + '-' + table_number[vert][0] + '-А'
            table[1][2] = elems[0] + '-' + str(Sector_next) + '-' + table_number[vert][0] + '-В'
        else:
            table[0][2] = elems[0] + '-' + elems[1] + '-' + table_number[vert][horiz + 1] + '-А'
            table[1][2] = elems[0] + '-' + elems[1] + '-' + table_number[vert][horiz + 1] + '-В'

        if vert == 11 and horiz != 11:
            table[2][2] = English_arr[English_arr_minus] + '-' + elems[1] + '-' + table_number[0][horiz + 1] + '-А'
        elif vert != 11 and horiz == 11:
            table[2][2] = elems[0] + '-' + str(Sector_next) + '-' + table_number[vert + 1][0] + '-А'
        elif vert == 11 and horiz == 11:
            table[2][2] = English_arr[English_arr_minus] + '-' + str(Sector_next) + '-' + table_number[0][0] + '-А'
        else:
            table[2][2] = elems[0] + '-' + elems[1] + '-' + table_number[vert + 1][horiz + 1] + '-А'


def cymbol_number_number_cymbol_cymbol(value_user, elems):
    vert, horiz = index_russian_25k(elems[2] + '-' + elems[3] + '-' + elems[4])
    Sector_next = int(elems[1]) + 1
    if int(elems[1]) == 60:
        Sector_next = 1
    Sector_last = int(elems[1]) - 1
    English_arr_minus = English_arr.index(elems[0]) - 1
    English_arr_up = English_arr.index(elems[0]) + 1
    if English_arr.index(elems[0]) == 0:
        English_arr_minus = 0
    if English_arr.index(elems[0]) == len(English_arr) - 1:
        English_arr_up = English_arr.index(elems[0])

    if int(elems[1]) == 1:
        Sector_last = 60
    print(vert)
    print(horiz)
    table[1][1] = value_user
    if vert == 0 and horiz == 0:
        table[0][0] = English_arr[English_arr_minus] + '-' + str(Sector_last) + '-' + Russian_25k[47][47]
        table[0][1] = English_arr[English_arr_minus] + '-' + elems[1] + '-' + Russian_25k[47][0]
        table[0][2] = English_arr[English_arr_minus] + '-' + elems[1] + '-' + Russian_25k[47][1]
        table[1][0] = elems[0] + '-' + str(Sector_last) + '-' + Russian_25k[0][47]
        table[1][2] = elems[0] + '-' + elems[1] + '-' + Russian_25k[0][1]
        table[2][0] = elems[0] + '-' + str(Sector_last) + '-' + Russian_25k[1][47]
        table[2][1] = elems[0] + '-' + elems[1] + '-' + Russian_25k[1][0]
        table[2][2] = elems[0] + '-' + elems[1] + '-' + Russian_25k[1][1]
    elif vert == 0 and horiz == 47:
        table[0][0] = English_arr[English_arr_minus] + '-' + elems[1] + '-' + Russian_25k[47][46]
        table[0][1] = English_arr[English_arr_minus] + '-' + elems[1] + '-' + Russian_25k[47][47]
        table[0][2] = English_arr[English_arr_minus] + '-' + str(Sector_next) + '-' + Russian_25k[47][0]
        table[1][0] = elems[0] + '-' + elems[1] + '-' + Russian_25k[0][46]
        table[1][2] = elems[0] + '-' + str(Sector_next) + '-' + Russian_25k[0][0]
        table[2][0] = elems[0] + '-' + elems[1] + '-' + Russian_25k[1][46]
        table[2][1] = elems[0] + '-' + elems[1] + '-' + Russian_25k[1][47]
        table[2][2] = elems[0] + '-' + str(Sector_next) + '-' + Russian_25k[1][0]
    elif vert == 47 and horiz == 47:
        table[0][0] = elems[0] + '-' + elems[1] + '-' + Russian_25k[46][46]
        table[0][1] = elems[0] + '-' + elems[1] + '-' + Russian_25k[46][47]
        table[1][0] = elems[0] + '-' + elems[1] + '-' + Russian_25k[47][46]
        table[2][0] = English_arr[English_arr_up] + '-' + elems[1] + '-' + Russian_25k[0][46]
        table[2][1] = English_arr[English_arr_up] + '-' + elems[1] + '-' + Russian_25k[0][47]
        table[2][0] = English_arr[English_arr_up] + '-' + elems[1] + '-' + Russian_25k[0][46]
        table[0][2] = elems[0] + '-' + str(Sector_next) + '-' + Russian_25k[46][0]
        table[1][2] = elems[0] + '-' + str(Sector_next) + '-' + Russian_25k[47][0]
        table[2][2] = English_arr[English_arr_up] + '-' + str(Sector_next) + '-' + Russian_25k[0][0]
    elif vert == 47 and horiz == 0:
        table[0][1] = elems[0] + '-' + elems[1] + '-' + Russian_25k[46][0]
        table[0][2] = elems[0] + '-' + elems[1] + '-' + Russian_25k[46][1]
        table[1][2] = elems[0] + '-' + elems[1] + '-' + Russian_25k[47][1]
        table[0][0] = elems[0] + '-' + str(Sector_last) + '-' + Russian_25k[46][47]
        table[1][0] = elems[0] + '-' + str(Sector_last) + '-' + Russian_25k[47][47]
        table[2][0] = English_arr[English_arr_up] + '-' + str(Sector_last) + '-' + Russian_25k[0][47]
        table[2][1] = English_arr[English_arr_up] + '-' + elems[1] + '-' + Russian_25k[0][0]
        table[2][2] = English_arr[English_arr_up] + '-' + elems[1] + '-' + Russian_25k[0][1]
    elif vert == 0:
        table[0][0] = English_arr[English_arr_minus] + '-' + elems[1] + '-' + Russian_25k[47][horiz - 1]
        table[0][1] = English_arr[English_arr_minus] + '-' + elems[1] + '-' + Russian_25k[47][horiz]
        table[0][2] = English_arr[English_arr_minus] + '-' + elems[1] + '-' + Russian_25k[47][horiz + 1]
        table[1][0] = elems[0] + '-' + elems[1] + '-' + Russian_25k[vert][horiz - 1]
        table[1][2] = elems[0] + '-' + elems[1] + '-' + Russian_25k[vert][horiz + 1]
        table[2][0] = elems[0] + '-' + elems[1] + '-' + Russian_25k[vert + 1][horiz - 1]
        table[2][1] = elems[0] + '-' + elems[1] + '-' + Russian_25k[vert + 1][horiz]
        table[2][2] = elems[0] + '-' + elems[1] + '-' + Russian_25k[1][horiz + 1]
    elif horiz == 47:
        table[1][0] = elems[0] + '-' + elems[1] + '-' + Russian_25k[vert][horiz - 1]
        table[0][0] = elems[0] + '-' + elems[1] + '-' + Russian_25k[vert - 1][horiz - 1]
        table[0][1] = elems[0] + '-' + elems[1] + '-' + Russian_25k[vert - 1][horiz]
        table[0][2] = elems[0] + '-' + str(Sector_next) + '-' + Russian_25k[vert - 1][0]
        table[1][2] = elems[0] + '-' + str(Sector_next) + '-' + Russian_25k[vert][0]
        table[2][2] = elems[0] + '-' + str(Sector_next) + '-' + Russian_25k[vert + 1][0]
        table[2][0] = elems[0] + '-' + elems[1] + '-' + Russian_25k[vert + 1][horiz - 1]
        table[2][1] = elems[0] + '-' + elems[1] + '-' + Russian_25k[vert + 1][horiz]
    elif vert == 47:
        table[1][2] = elems[0] + '-' + elems[1] + '-' + Russian_25k[vert][horiz + 1]
        table[2][1] = English_arr[English_arr_up] + '-' + elems[1] + '-' + Russian_25k[0][horiz]
        table[2][2] = English_arr[English_arr_up] + '-' + elems[1] + '-' + Russian_25k[0][horiz + 1]
        table[2][0] = English_arr[English_arr_up] + '-' + elems[1] + '-' + Russian_25k[0][horiz - 1]
        table[1][0] = elems[0] + '-' + elems[1] + '-' + Russian_25k[vert][horiz - 1]
        table[0][0] = elems[0] + '-' + elems[1] + '-' + Russian_25k[vert - 1][horiz - 1]
        table[0][1] = elems[0] + '-' + elems[1] + '-' + Russian_25k[vert - 1][horiz]
        table[0][2] = elems[0] + '-' + elems[1] + '-' + Russian_25k[vert - 1][horiz + 1]
    elif horiz == 0:
        table[0][0] = elems[0] + '-' + str(Sector_last) + '-' + Russian_25k[vert - 1][47]
        table[0][1] = elems[0] + '-' + elems[1] + '-' + Russian_25k[vert - 1][horiz]
        table[0][2] = elems[0] + '-' + elems[1] + '-' + Russian_25k[vert - 1][horiz + 1]
        table[1][0] = elems[0] + '-' + str(Sector_last) + '-' + Russian_25k[vert][47]
        table[1][2] = elems[0] + '-' + elems[1] + '-' + Russian_25k[vert][horiz + 1]
        table[2][0] = elems[0] + '-' + str(Sector_last) + '-' + Russian_25k[vert + 1][horiz - 1]
        table[2][1] = elems[0] + '-' + elems[1] + '-' + Russian_25k[vert + 1][horiz]
        table[2][2] = elems[0] + '-' + elems[1] + '-' + Russian_25k[vert + 1][horiz + 1]
    else:
        table[0][0] = elems[0] + '-' + elems[1] + '-' + Russian_25k[vert - 1][horiz - 1]
        table[0][1] = elems[0] + '-' + elems[1] + '-' + Russian_25k[vert - 1][horiz]
        table[0][2] = elems[0] + '-' + elems[1] + '-' + Russian_25k[vert - 1][horiz + 1]
        table[1][0] = elems[0] + '-' + elems[1] + '-' + Russian_25k[vert][horiz - 1]
        table[1][2] = elems[0] + '-' + elems[1] + '-' + Russian_25k[vert][horiz + 1]
        table[2][0] = elems[0] + '-' + elems[1] + '-' + Russian_25k[vert + 1][horiz - 1]
        table[2][1] = elems[0] + '-' + elems[1] + '-' + Russian_25k[vert + 1][horiz]
        table[2][2] = elems[0] + '-' + elems[1] + '-' + Russian_25k[vert + 1][horiz + 1]


def cymbol_number_rimnumber(value_user, elems):
    """1: 200 000"""
    Sector_next = int(elems[1]) + 1
    if int(elems[1]) == 60:
        Sector_next = 1
    Sector_last = int(elems[1]) - 1
    English_arr_minus = English_arr.index(elems[0]) - 1
    English_arr_up = English_arr.index(elems[0]) + 1
    if English_arr.index(elems[0]) == 0:
        English_arr_minus = 0
    if English_arr.index(elems[0]) == len(English_arr) - 1:
        English_arr_up = English_arr.index(elems[0])

    if int(elems[1]) == 1:
        Sector_last = 60
    table[1][1] = value_user
    index1 = 0
    index2 = 0
    for i in table_rimnumber:
        try:
            index2 = i.index(elems[2])
        except ValueError:
            index2 = -1
        if index2 != -1:
            break
        index1 += 1
    print(index1, index2)

    if index1 > 0 and index1 < 5 and index2 > 0 and index2 < 5:
        table[0][0] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1 - 1][index2 - 1]
        table[0][1] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1 - 1][index2]
        table[0][2] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1 - 1][index2 + 1]
        table[1][0] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1][index2 - 1]
        table[1][2] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1][index2 + 1]
        table[2][0] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1 + 1][index2 - 1]
        table[2][1] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1 + 1][index2]
        table[2][2] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1 + 1][index2 + 1]
    if index1 == 0 and index2 > 0 and index2 < 5:
        table[0][0] = English_arr[English_arr_minus] + "-" + elems[1] + "-" + table_rimnumber[index1 - 1][index2 - 1]
        table[0][1] = English_arr[English_arr_minus] + "-" + elems[1] + "-" + table_rimnumber[index1 - 1][index2]
        table[0][2] = English_arr[English_arr_minus] + "-" + elems[1] + "-" + table_rimnumber[index1 - 1][index2 + 1]
        table[1][0] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1][index2 - 1]
        table[1][2] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1][index2 + 1]
        table[2][0] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1 + 1][index2 - 1]
        table[2][1] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1 + 1][index2]
        table[2][2] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1 + 1][index2 + 1]
    if index1 == 5 and index2 > 0 and index2 < 5:
        table[0][0] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1 - 1][index2 - 1]
        table[0][1] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1 - 1][index2]
        table[0][2] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1 - 1][index2 + 1]
        table[1][0] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1][index2 - 1]
        table[1][2] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1][index2 + 1]
        table[2][0] = English_arr[English_arr_up] + "-" + elems[1] + "-" + table_rimnumber[0][index2 - 1]
        table[2][1] = English_arr[English_arr_up] + "-" + elems[1] + "-" + table_rimnumber[0][index2]
        table[2][2] = English_arr[English_arr_up] + "-" + elems[1] + "-" + table_rimnumber[0][index2 + 1]
    if index2 == 0 and index1 > 0 and index1 < 5:
        table[0][0] = elems[0] + "-" + str(Sector_last) + "-" + table_rimnumber[index1 - 1][index2 - 1]
        table[0][1] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1 - 1][index2]
        table[0][2] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1 - 1][index2 + 1]
        table[1][0] = elems[0] + "-" + str(Sector_last) + "-" + table_rimnumber[index1][index2 - 1]
        table[1][2] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1][index2 + 1]
        table[2][0] = elems[0] + "-" + str(Sector_last) + "-" + table_rimnumber[index1 + 1][index2 - 1]
        table[2][1] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1 + 1][index2]
        table[2][2] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1 + 1][index2 + 1]
    if index2 == 5 and 0 < index1 < 5:
        table[0][0] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1 - 1][index2 - 1]
        table[0][1] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1 - 1][index2]
        table[0][2] = elems[0] + "-" + str(Sector_next) + "-" + table_rimnumber[index1 - 1][0]
        table[1][0] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1][index2 - 1]
        table[1][2] = elems[0] + "-" + str(Sector_next) + "-" + table_rimnumber[index1][0]
        table[2][0] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1 + 1][index2 - 1]
        table[2][1] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1 + 1][index2]
        table[2][2] = elems[0] + "-" + str(Sector_next) + "-" + table_rimnumber[index1 + 1][0]
    if index1 == 0 and index2 == 0:
        table[0][0] = English_arr[English_arr_minus] + "-" + str(Sector_last) + "-" + table_rimnumber[index1 - 1][
            index2 - 1]
        table[0][1] = English_arr[English_arr_minus] + "-" + elems[1] + "-" + table_rimnumber[index1 - 1][index2]
        table[0][2] = English_arr[English_arr_minus] + "-" + elems[1] + "-" + table_rimnumber[index1 - 1][index2 + 1]
        table[1][0] = elems[0] + "-" + str(Sector_last) + "-" + table_rimnumber[index1][index2 - 1]
        table[1][2] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1][index2 + 1]
        table[2][0] = elems[0] + "-" + str(Sector_last) + "-" + table_rimnumber[index1 + 1][index2 - 1]
        table[2][1] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1 + 1][index2]
        table[2][2] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1 + 1][index2 + 1]
    if index1 == 0 and index2 == 5:
        table[0][0] = English_arr[English_arr_minus] + "-" + elems[1] + "-" + table_rimnumber[index1 - 1][index2 - 1]
        table[0][1] = English_arr[English_arr_minus] + "-" + elems[1] + "-" + table_rimnumber[index1 - 1][index2]
        table[0][2] = English_arr[English_arr_minus] + "-" + str(Sector_next) + "-" + table_rimnumber[index1 - 1][0]
        table[1][0] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1][index2 - 1]
        table[1][2] = elems[0] + "-" + str(Sector_next) + "-" + table_rimnumber[index1][0]
        table[2][0] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1 + 1][index2 - 1]
        table[2][1] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1 + 1][index2]
        table[2][2] = elems[0] + "-" + str(Sector_next) + "-" + table_rimnumber[index1 + 1][0]
    if index1 == 5 and index2 == 0:
        table[0][0] = elems[0] + "-" + str(Sector_last) + "-" + table_rimnumber[index1 - 1][index2 - 1]
        table[0][1] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1 - 1][index2]
        table[0][2] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1 - 1][index2 + 1]
        table[1][0] = elems[0] + "-" + str(Sector_last) + "-" + table_rimnumber[index1][index2 - 1]
        table[1][2] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1][index2 + 1]
        table[2][0] = English_arr[English_arr_up] + "-" + str(Sector_last) + "-" + table_rimnumber[0][index2 - 1]
        table[2][1] = English_arr[English_arr_up] + "-" + elems[1] + "-" + table_rimnumber[0][index2]
        table[2][2] = English_arr[English_arr_up] + "-" + elems[1] + "-" + table_rimnumber[0][index2 + 1]
    if index1 == 5 and index2 == 5:
        table[0][0] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1 - 1][index2 - 1]
        table[0][1] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1 - 1][index2]
        table[0][2] = elems[0] + "-" + str(Sector_next) + "-" + table_rimnumber[index1 - 1][0]
        table[1][0] = elems[0] + "-" + elems[1] + "-" + table_rimnumber[index1][index2 - 1]
        table[1][2] = elems[0] + "-" + str(Sector_next) + "-" + table_rimnumber[index1][0]
        table[2][0] = English_arr[English_arr_up] + "-" + elems[1] + "-" + table_rimnumber[0][index2 - 1]
        table[2][1] = English_arr[English_arr_up] + "-" + elems[1] + "-" + table_rimnumber[0][index2]
        table[2][2] = English_arr[English_arr_up] + "-" + str(Sector_next) + "-" + table_rimnumber[0][0]


def protect_is_table_rimtable(value):
    for elem in table_rimnumber:
        for i in elem:
            if i == value: return True
    return False


def random_value():
    value = random.randint(1, 6)
    value = 6
    if value == 1:
        algoritm(str(random.choice(English_arr[1:-1])) + '-' + str(random.randint(1, 60)))
    elif value == 2:
        algoritm(str(random.choice(English_arr[1:-1])) + '-' + str(random.randint(1, 60)) + '-' + str(
            random.choice(random.choice(table_rimnumber))))
    elif value == 3:
        algoritm(str(random.choice(English_arr[1:-1])) + '-' + str(random.randint(1, 60)) + '-' + str(
            random.choice(Russian_Arr)))
    elif value == 4:
        algoritm(str(random.choice(English_arr[1:-1])) + '-' + str(random.randint(1, 60)) + '-' + str(
            random.randint(1, 144)))
    elif value == 5:
        print(algoritm(str(random.choice(English_arr[1:-1])) + '-' + str(random.randint(1, 60)) + '-' + str(
            random.randint(1, 144)) + '-' + str(random.choice(Russian_Arr))))
    elif value == 6:
        print(str(random.choice(English_arr[1:-1])) + '-' + str(random.randint(1, 60)) + '-' + str(
            random.randint(1, 144)) + '-' + str(random.choice(Russian_Arr)) + '-' + str(
            random.choice(Russian_Arr)).lower())


def algoritm(value_user):
    elems = value_user.split('-')
    if len(elems) == 2 and elems[0] in English_arr and elems[1] in protect_sector:
        cymbol_number(value_user, elems)
        table[2][3] = "1000000"
    elif len(elems) == 3 and elems[0] in English_arr and elems[1] in protect_sector and protect_is_table_rimtable(
            elems[2]):
        cymbol_number_rimnumber(value_user, elems)
        table[2][3] = "200000"
    elif len(elems) == 3 and elems[0] in English_arr and elems[1] in protect_sector and elems[2] in Russian_Arr:
        cymbol_number_cymbol(value_user, elems)
        table[2][3] = '500000'
    elif len(elems) == 3 and elems[0] in English_arr and (elems[2] in protect_sector or elems[2] in add_protect_sector):

        cymbol_number_number(value_user, elems)
        table[2][3] = '100000'
    elif len(elems) == 4 and elems[0] in English_arr and (
            elems[2] in protect_sector or elems[2] in add_protect_sector) and elems[3] in Russian_Arr:
        cymbol_number_number_cymbol(value_user, elems)
        table[2][3] = '50000'
    elif len(elems) == 5 and elems[0] in English_arr and elems[1] in protect_sector and (
            elems[2] in protect_sector or elems[2] in add_protect_sector) and elems[3] in Russian_Arr and elems[
        4] in str(Russian_Arr).lower():
        cymbol_number_number_cymbol_cymbol(value_user, elems)
        table[2][3] = '25000'
    for element in table:
        print(element)
    return table


if __name__ == "__main__":
    random_value()
# algoritm("H-25-144-Б-б")
